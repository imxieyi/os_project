	.file	"bootpack.c"
	.data
LC0:
	.ascii "(%3d,%3d)\0"
LC1:
	.ascii "mem: %dMB free:%dKB\0"
LC3:
	.ascii "[lcr %4d %4d]\0"
LC2:
	.ascii "%02X\0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	$2, %esi
	pushl	%ebx
	leal	-268(%ebp), %ebx
	subl	$476, %esp
	call	_init_gdtidt
	call	_init_pic
	call	_io_sti
	pushl	$-1073741825
	pushl	$4194304
	call	_memtest
	pushl	$3932160
	movl	%eax, -480(%ebp)
	call	_memman_init
	pushl	$647168
	pushl	$4096
	pushl	$3932160
	call	_memman_free
	movl	-480(%ebp), %eax
	subl	$4194304, %eax
	pushl	%eax
	pushl	$4194304
	pushl	$3932160
	call	_memman_free
	addl	$36, %esp
	call	_init_palette
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	pushl	$3932160
	call	_sheetctrl_init
	pushl	%eax
	movl	%eax, -464(%ebp)
	call	_sheet_alloc
	pushl	-464(%ebp)
	movl	%eax, -468(%ebp)
	call	_sheet_alloc
	movswl	4086,%edx
	movl	%eax, -472(%ebp)
	movswl	4084,%eax
	imull	%edx, %eax
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	addl	$32, %esp
	pushl	$-1
	movl	%eax, -476(%ebp)
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	-476(%ebp)
	pushl	-468(%ebp)
	call	_sheet_setbuf
	pushl	$99
	pushl	$16
	pushl	$16
	pushl	%ebx
	pushl	-472(%ebp)
	call	_sheet_setbuf
	addl	$40, %esp
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	-476(%ebp)
	call	_init_screen
	movswl	4084,%eax
	leal	-16(%eax), %ecx
	movl	%ecx, %eax
	movl	$2, %ecx
	cltd
	idivl	%esi
	movl	%eax, %edi
	movswl	4086,%eax
	pushl	$99
	leal	-44(%eax), %esi
	pushl	%ebx
	movl	%esi, %eax
	leal	-284(%ebp), %ebx
	cltd
	idivl	%ecx
	movl	%eax, %esi
	call	_init_mouse_cursor8
	pushl	$0
	pushl	$0
	pushl	-468(%ebp)
	pushl	-464(%ebp)
	call	_sheet_slide
	addl	$36, %esp
	pushl	%esi
	pushl	%edi
	pushl	-472(%ebp)
	pushl	-464(%ebp)
	call	_sheet_slide
	pushl	$0
	pushl	-468(%ebp)
	pushl	-464(%ebp)
	call	_sheet_updown
	pushl	$1
	pushl	-472(%ebp)
	pushl	-464(%ebp)
	call	_sheet_updown
	addl	$40, %esp
	pushl	%esi
	pushl	%edi
	pushl	$LC0
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	pushl	$7
	pushl	$0
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-476(%ebp)
	call	_putfonts8_asc
	addl	$40, %esp
	pushl	$3932160
	call	_memman_total
	shrl	$22, -480(%ebp)
	shrl	$10, %eax
	movl	%eax, (%esp)
	movl	-480(%ebp), %eax
	sall	$2, %eax
	pushl	%eax
	pushl	$LC1
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	pushl	$13
	pushl	$32
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-476(%ebp)
	call	_putfonts8_asc
	addl	$40, %esp
	pushl	$48
	movswl	4084,%eax
	pushl	%eax
	pushl	$0
	pushl	$0
	pushl	-468(%ebp)
	pushl	-464(%ebp)
	call	_sheet_refresh
	call	_init_keyboard
	leal	-300(%ebp), %eax
	pushl	%eax
	call	_enable_mouse
	pushl	$249
	pushl	$33
	call	_io_out8
	addl	$36, %esp
	pushl	$239
	pushl	$161
	call	_io_out8
	leal	-332(%ebp), %eax
	pushl	%eax
	pushl	$32
	pushl	$_keybuf
	call	_fifo8_init
	leal	-460(%ebp), %eax
	pushl	%eax
	pushl	$128
	pushl	$_mousebuf
	call	_fifo8_init
	addl	$32, %esp
L2:
	call	_io_cli
	pushl	$_keybuf
	call	_fifo8_status
	pushl	$_mousebuf
	movl	%eax, %ebx
	call	_fifo8_status
	leal	(%eax,%ebx), %eax
	popl	%ebx
	popl	%edx
	testl	%eax, %eax
	je	L18
	pushl	$_keybuf
	call	_fifo8_status
	popl	%ecx
	testl	%eax, %eax
	jne	L19
	pushl	$_mousebuf
	call	_fifo8_status
	popl	%edx
	testl	%eax, %eax
	je	L2
	pushl	$_mousebuf
	call	_fifo8_get
	movb	%al, %bl
	call	_io_sti
	movzbl	%bl, %eax
	pushl	%eax
	leal	-300(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	addl	$12, %esp
	testl	%eax, %eax
	je	L2
	pushl	-292(%ebp)
	pushl	-296(%ebp)
	pushl	$LC3
	leal	-284(%ebp), %ebx
	pushl	%ebx
	call	_sprintf
	addl	$16, %esp
	movl	-288(%ebp), %eax
	testl	$1, %eax
	je	L11
	movb	$76, -283(%ebp)
L11:
	testl	$2, %eax
	je	L12
	movb	$82, -281(%ebp)
L12:
	andl	$4, %eax
	je	L13
	movb	$67, -282(%ebp)
L13:
	pushl	$31
	pushl	$151
	pushl	$16
	pushl	$32
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	-476(%ebp)
	call	_boxfill8
	pushl	%ebx
	pushl	$7
	pushl	$16
	pushl	$32
	movswl	4084,%eax
	pushl	%eax
	pushl	-476(%ebp)
	call	_putfonts8_asc
	addl	$52, %esp
	pushl	$32
	pushl	$152
	pushl	$16
	pushl	$32
	pushl	-468(%ebp)
	pushl	-464(%ebp)
	call	_sheet_refresh
	addl	$24, %esp
	addl	-292(%ebp), %esi
	addl	-296(%ebp), %edi
	js	L20
L14:
	testl	%esi, %esi
	js	L21
L15:
	movswl	4084,%eax
	subl	$16, %eax
	cmpl	%eax, %edi
	jle	L16
	movl	%eax, %edi
L16:
	movswl	4086,%eax
	subl	$16, %eax
	cmpl	%eax, %esi
	jle	L17
	movl	%eax, %esi
L17:
	pushl	%esi
	pushl	%edi
	pushl	$LC0
	pushl	%ebx
	call	_sprintf
	pushl	$15
	pushl	$79
	pushl	$0
	pushl	$0
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	-476(%ebp)
	call	_boxfill8
	addl	$44, %esp
	pushl	%ebx
	pushl	$7
	pushl	$0
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-476(%ebp)
	call	_putfonts8_asc
	pushl	$16
	pushl	$80
	pushl	$0
	pushl	$0
	pushl	-468(%ebp)
	pushl	-464(%ebp)
	call	_sheet_refresh
	addl	$48, %esp
	pushl	%esi
	pushl	%edi
	pushl	-472(%ebp)
	pushl	-464(%ebp)
	call	_sheet_slide
	addl	$16, %esp
	jmp	L2
L21:
	xorl	%esi, %esi
	jmp	L15
L20:
	xorl	%edi, %edi
	jmp	L14
L19:
	pushl	$_keybuf
	call	_fifo8_get
	movb	%al, %bl
	call	_io_sti
	movzbl	%bl, %eax
	pushl	%eax
	leal	-284(%ebp), %ebx
	pushl	$LC2
	pushl	%ebx
	call	_sprintf
	pushl	$31
	pushl	$15
	pushl	$16
	pushl	$0
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	-476(%ebp)
	call	_boxfill8
	addl	$44, %esp
	pushl	%ebx
	pushl	$7
	pushl	$16
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-476(%ebp)
	call	_putfonts8_asc
	pushl	$32
	pushl	$16
	pushl	$16
	pushl	$0
	pushl	-468(%ebp)
	pushl	-464(%ebp)
	call	_sheet_refresh
	addl	$48, %esp
	jmp	L2
L18:
	call	_io_stihlt
	jmp	L2
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
	.def	_fifo8_get;	.scl	2;	.type	32;	.endef
	.def	_io_stihlt;	.scl	2;	.type	32;	.endef
	.def	_fifo8_status;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_fifo8_init;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_sheet_refresh;	.scl	2;	.type	32;	.endef
	.def	_memman_total;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
	.def	_sheet_slide;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_init_screen;	.scl	2;	.type	32;	.endef
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
	.def	_sheetctrl_init;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_memman_free;	.scl	2;	.type	32;	.endef
	.def	_memman_init;	.scl	2;	.type	32;	.endef
	.def	_memtest;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
