	.file	"bootpack.c"
	.data
LC0:
	.ascii "ABC 123\0"
LC1:
	.ascii "Project OS.\0"
LC2:
	.ascii "scrnx = %d\0"
LC4:
	.ascii "[lcr %4d %4d]\0"
LC5:
	.ascii "(%3d,%3d)\0"
LC3:
	.ascii "%02X\0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	$152, %edi
	pushl	%ebx
	movl	$78, %esi
	subl	$196, %esp
	leal	-28(%ebp), %ebx
	call	_init_gdtidt
	call	_init_pic
	call	_io_sti
	call	_init_palette
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_init_screen
	pushl	$LC0
	pushl	$7
	pushl	$8
	pushl	$8
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	addl	$36, %esp
	pushl	$LC1
	pushl	$0
	pushl	$31
	pushl	$31
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	pushl	$LC1
	pushl	$7
	pushl	$30
	pushl	$30
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	addl	$48, %esp
	movswl	4084,%eax
	pushl	%eax
	pushl	$LC2
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	pushl	$13
	pushl	$64
	pushl	$16
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	addl	$36, %esp
	pushl	$14
	pushl	-208(%ebp)
	call	_init_mouse_cursor8
	pushl	$16
	pushl	-208(%ebp)
	pushl	$78
	pushl	$152
	pushl	$16
	pushl	$16
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putblock8_8
	addl	$40, %esp
	call	_init_keyboard
	leal	-44(%ebp), %eax
	pushl	%eax
	call	_enable_mouse
	pushl	$249
	pushl	$33
	call	_io_out8
	pushl	$239
	pushl	$161
	call	_io_out8
	leal	-76(%ebp), %eax
	pushl	%eax
	pushl	$32
	pushl	$_keybuf
	call	_fifo8_init
	leal	-204(%ebp), %eax
	addl	$32, %esp
	pushl	%eax
	pushl	$128
	pushl	$_mousebuf
	call	_fifo8_init
	addl	$12, %esp
L2:
	call	_io_cli
	pushl	$_keybuf
	call	_fifo8_status
	pushl	$_mousebuf
	movl	%eax, %ebx
	call	_fifo8_status
	leal	(%eax,%ebx), %eax
	popl	%ebx
	popl	%edx
	testl	%eax, %eax
	je	L18
	pushl	$_keybuf
	call	_fifo8_status
	popl	%ecx
	testl	%eax, %eax
	jne	L19
	pushl	$_mousebuf
	call	_fifo8_status
	popl	%edx
	testl	%eax, %eax
	je	L2
	pushl	$_mousebuf
	call	_fifo8_get
	movb	%al, %bl
	call	_io_sti
	movzbl	%bl, %eax
	pushl	%eax
	leal	-44(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	addl	$12, %esp
	testl	%eax, %eax
	je	L2
	pushl	-36(%ebp)
	pushl	-40(%ebp)
	pushl	$LC4
	leal	-28(%ebp), %ebx
	pushl	%ebx
	call	_sprintf
	addl	$16, %esp
	movl	-32(%ebp), %eax
	testl	$1, %eax
	je	L11
	movb	$76, -27(%ebp)
L11:
	testl	$2, %eax
	je	L12
	movb	$82, -25(%ebp)
L12:
	andl	$4, %eax
	je	L13
	movb	$67, -26(%ebp)
L13:
	pushl	$31
	pushl	$151
	pushl	$16
	pushl	$32
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_boxfill8
	pushl	%ebx
	pushl	$7
	pushl	$16
	pushl	$32
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	leal	15(%esi), %eax
	addl	$52, %esp
	pushl	%eax
	leal	15(%edi), %eax
	pushl	%eax
	pushl	%esi
	pushl	%edi
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_boxfill8
	addl	$28, %esp
	addl	-36(%ebp), %esi
	addl	-40(%ebp), %edi
	js	L20
L14:
	testl	%esi, %esi
	js	L21
L15:
	movswl	4084,%eax
	subl	$16, %eax
	cmpl	%eax, %edi
	jle	L16
	movl	%eax, %edi
L16:
	movswl	4086,%eax
	subl	$16, %eax
	cmpl	%eax, %esi
	jle	L17
	movl	%eax, %esi
L17:
	pushl	%esi
	pushl	%edi
	pushl	$LC5
	pushl	%ebx
	call	_sprintf
	pushl	$15
	pushl	$79
	pushl	$0
	pushl	$0
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_boxfill8
	addl	$44, %esp
	pushl	%ebx
	pushl	$7
	pushl	$0
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	pushl	$16
	pushl	-208(%ebp)
	pushl	%esi
	pushl	%edi
	pushl	$16
	pushl	$16
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putblock8_8
	addl	$56, %esp
	jmp	L2
L21:
	xorl	%esi, %esi
	jmp	L15
L20:
	xorl	%edi, %edi
	jmp	L14
L19:
	pushl	$_keybuf
	call	_fifo8_get
	movb	%al, %bl
	call	_io_sti
	movzbl	%bl, %eax
	pushl	%eax
	leal	-28(%ebp), %ebx
	pushl	$LC3
	pushl	%ebx
	call	_sprintf
	pushl	$31
	pushl	$15
	pushl	$16
	pushl	$0
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_boxfill8
	addl	$44, %esp
	pushl	%ebx
	pushl	$7
	pushl	$16
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	addl	$24, %esp
	jmp	L2
L18:
	call	_io_stihlt
	jmp	L2
	.balign 2
.globl _wait_kbc_sendready
	.def	_wait_kbc_sendready;	.scl	2;	.type	32;	.endef
_wait_kbc_sendready:
	pushl	%ebp
	movl	%esp, %ebp
L23:
	pushl	$100
	call	_io_in8
	popl	%ecx
	andl	$2, %eax
	jne	L23
	leave
	ret
	.balign 2
.globl _init_keyboard
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
_init_keyboard:
	pushl	%ebp
	movl	%esp, %ebp
	call	_wait_kbc_sendready
	pushl	$96
	pushl	$100
	call	_io_out8
	call	_wait_kbc_sendready
	pushl	$71
	pushl	$96
	call	_io_out8
	leave
	ret
	.balign 2
.globl _enable_mouse
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
_enable_mouse:
	pushl	%ebp
	movl	%esp, %ebp
	call	_wait_kbc_sendready
	pushl	$212
	pushl	$100
	call	_io_out8
	call	_wait_kbc_sendready
	pushl	$244
	pushl	$96
	call	_io_out8
	movl	8(%ebp), %eax
	movb	$-1, 3(%eax)
	leave
	ret
	.balign 2
.globl _mouse_decode
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
_mouse_decode:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	movl	8(%ebp), %ecx
	pushl	%ebx
	movl	12(%ebp), %esi
	movb	3(%ecx), %dl
	movl	%esi, %ebx
	cmpb	$-1, %dl
	je	L36
	movsbl	%dl,%edi
	testb	%dl, %dl
	movb	%bl, (%ecx,%edi)
	jne	L32
	andl	$-56, %ebx
	xorl	%eax, %eax
	cmpb	$8, %bl
	je	L32
L29:
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L32:
	movsbl	%dl,%eax
	incl	%eax
	movl	$3, %edx
	movl	%edx, %ebx
	cltd
	idivl	%ebx
	movb	%dl, 3(%ecx)
	testb	%dl, %dl
	jne	L33
	movb	(%ecx), %bl
	movl	%ebx, %eax
	andl	$7, %eax
	movl	%eax, 12(%ecx)
	movzbl	2(%ecx), %eax
	movl	%eax, 8(%ecx)
	movb	%bl, %al
	movzbl	1(%ecx), %edx
	andl	$16, %eax
	movl	%edx, 4(%ecx)
	testb	%al, %al
	je	L34
	orl	$-256, %edx
	movl	%edx, 4(%ecx)
L34:
	andl	$32, %ebx
	testb	%bl, %bl
	je	L35
	orl	$-256, 8(%ecx)
L35:
	negl	8(%ecx)
	movl	$1, %eax
	jmp	L29
L33:
	xorl	%eax, %eax
	jmp	L29
L36:
	cmpb	$-6, %bl
	jne	L33
	movb	$0, 3(%ecx)
	jmp	L33
	.def	_io_in8;	.scl	2;	.type	32;	.endef
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
	.def	_fifo8_get;	.scl	2;	.type	32;	.endef
	.def	_io_stihlt;	.scl	2;	.type	32;	.endef
	.def	_fifo8_status;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_fifo8_init;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_putblock8_8;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
	.def	_init_screen;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
